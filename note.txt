// rollup.config.js : if existing approch not work use this approch.

import resolve from '@rollup/plugin-node-resolve';
import commonjs from '@rollup/plugin-commonjs';
import { terser } from 'rollup-plugin-terser';

export default {
  input: 'src/Table.js',
  output: [
    {
      file: 'dist/table.esm.js',
      format: 'esm',
      sourcemap: true
    },
    {
      file: 'dist/table.umd.js',
      format: 'umd',
      name: 'Table',
      sourcemap: true
    }
  ],
  plugins: [resolve(), commonjs(), terser()]
};

//package.json
{
  "name": "my-table-lib",
  "version": "1.0.0",
  "main": "dist/table.umd.js",
  "module": "dist/table.esm.js",
  "type": "module",
  "scripts": {
    "build": "rollup -c"
  },
  "keywords": ["table", "grid", "ui", "framework-agnostic"],
  "author": "Your Name",
  "license": "MIT"
}


//Table.js
class Table {
  constructor(element, options = {}) {
    this.element = element;
    this.options = { ...this.defaults, ...options };
    this.data = [];
    this.state = {};
    this.init();
  }

  get defaults() {
    return {
      columns: [],
      data: []
    };
  }

  init() {
    this.setColumns(this.options.columns);
    this.setData(this.options.data);
    this.render();
  }

  setColumns(columns) {
    this.options.columns = columns;
  }

  setData(data) {
    this.data = data;
    this.refresh();
  }

  refresh() {
    this.render();
  }

  render() {
    if (!this.element) return;

    this.element.innerHTML = '';
    const table = document.createElement('table');

    const thead = document.createElement('thead');
    const headerRow = document.createElement('tr');
    this.options.columns.forEach(col => {
      const th = document.createElement('th');
      th.textContent = col.label;
      headerRow.appendChild(th);
    });
    thead.appendChild(headerRow);
    table.appendChild(thead);

    const tbody = document.createElement('tbody');
    this.data.forEach(row => {
      const tr = document.createElement('tr');
      this.options.columns.forEach(col => {
        const td = document.createElement('td');
        td.textContent = row[col.field];
        tr.appendChild(td);
      });
      tbody.appendChild(tr);
    });

    table.appendChild(tbody);
    this.element.appendChild(table);
  }

  destroy() {
    if (this.element) {
      this.element.innerHTML = '';
    }
  }
}

export default Table;
